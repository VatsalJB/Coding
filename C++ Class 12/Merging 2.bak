#include<iostream.h>
#include<conio.h>
#include<stdio.h>
#include<string.h>


class sort
{
  char str[20],sorted[40];
  int k;

  public :


  sort(){}

  sort(char A[])
  {
    int i,j;

    for(i=0;A[i]!='\0';i++)
    {
       if(A[i]==' ')
       {
         for(j=i;A[j]!='\0';j++)
         A[j]=A[j+1];
       }
    }

    strcpy(str,A);

    display(0);
  }

  int choose();
  void display(int);
  void selsort(char []);
  void bubblesort();
  void mergesort(char [],char []);

};

int sort :: choose()
{
  cout<<"\n\nEnter the type of sorting you want : ";
  cout<<"\n\n1.Bubble Sort\n2.Selection Sort\n3.Merge Sort\n";
  cin>>k;

  return k;

}

void sort :: mergesort(char str1[],char str2[])
{
   int i,j;
   char temp;

   /*
   for(i=0;str1[i]!='\0';i++)
    for(j=i;str1[j]!='\0';j++)
     if(str1[i]>str1[j])
     {
       temp=str1[i];
       str1[i]=str1[j];
       str1[j]=temp;
     }

 for(i=0;str2[i]!='\0';i++)
  for(j=i;str2[j]!='\0';j++)
     if(str2[i]>str2[j])
     {
       temp=str2[i];
       str2[i]=str2[j];
       str2[j]=temp;
     }
   */

  selsort(str1);
  selsort(str2);

  for(i=0,j=0,k=0;str1[i]!='\0'&&str2[j]!='\0';k++)
    if(str1[i]>str2[j])
    {
     sorted[k]=str2[j];
     j++;
    }
    else
    {
     sorted[k]=str1[i];
     i++;
    }

  if(str1[i]=='\0')
    for(;str2[j]!='\0';j++,k++)
    sorted[k]=str2[j];
  else
    for(;str1[i]!='\0';i++,k++)
    sorted[k]=str1[i];

  sorted[k]='\0';

  display(2);

}


void sort :: bubblesort()
{
  int i,j,len;

  char temp;

  for(i=0;str[i]!='\0';i++);
  len=i-1;

  for(i=0;str[i]!='\0';i++)
     for(j=0;j<len-i;j++)
        if(str[j]>str[j+1])
        {
         temp=str[j];
         str[j]=str[j+1];
         str[j+1]=temp;
        }

  display(1);
}


void sort :: selsort(char A[]="abcdefghijklmnopqrst")
{
  int i,j;

  char temp;

  if(strcmp(A,"abcdefghijklmnopqrst"))
  strcpy(str,A);

  for(i=0;str[i]!='\0';i++)
     for(j=i;str[j]!='\0';j++)
     {

       if(str[i]>str[j])
       {
        temp=str[i];
        str[i]=str[j];
        str[j]=temp;
       }
     }

  if(!strcmp(A,"abcdefghijklmnopqrst"))
  display(1);
  else
  strcpy(A,str);
}


void sort :: display(int i)
{
   if(i==0)
   cout<<"\nThe string without spaces is : "<<str;

   if(i==1)
   cout<<"\nThe sorted string is : "<<str;

   if(i==2)
   cout<<"\nThe sorted string is : "<<sorted;
}



class search
{
 char word[10];

 public :

 void lsearch(char str[]);

};

void search :: lsearch(char str[])
{
  int i,j;

  cout<<"\nEnter the word to be searched : ";
  gets(word);

  char temp[10];

  for(i=0,j=0;str[i]!='\0';i++,j++)
  {
    temp[j]=str[i];

    if(str[i]==' ')
    {
      temp[j]='\0';
      j=-1;

      if(!strcmp(temp,word))
      {
        j=-5;
        break;
      }
    }

    if(str[i+1]=='\0')
    {
      temp[j+1]='\0';

      if(!strcmp(temp,word))
      {
        j=-5;
        break;
      }
    }
  }

  if(j==-5)
  cout<<"\nThe word exists.";
  else
  cout<<"\nThe word does not exist.";

}


class merge
{
  char m[40];

  public :

  merge(char [],char [],int);

  void display();

};

void merge :: display()
{
  cout<<"\nThe merged strings are : "<<m;
}


merge :: merge(char x[],char y[],int z)
{
 int i,j;

 for(i=0;x[i]!='\0';i++);

 x[i]=' ';
 i++;

 for(j=0;y[j]!='\0';j++,i++)
 x[i]=y[j];

 x[i]='\0';

 if(z==1)
 {
  search s;
  s.lsearch(x);
 }
 else
    if(z==2)
    {
      sort s(x);
      s.bubblesort();
    }
    else
       if(z==3)
       {
         sort s(x);
         s.selsort();
       }
       else
       strcpy(m,x);

}






class takestring
{
  char A[20],B[20];

  public :

  takestring()
  {
    strcpy(A,"firstname");
    strcpy(B,"lastname");

  }

  takestring(int x)
  {
    cout<<"\nEnter the first string : ";
    gets(A);

    cout<<"\nEnter the second string : ";
    gets(B);

  }

  void menu();

};


void takestring :: menu()
{
 int i;

 cout<<"\n\nMENU\n\n1.Merge\n2.Search\n3.Sort";
 cout<<"\n\nEnter the operation you want to perform : ";
 cin>>i;

 if(i==1)
 {
   merge m(A,B,0);

   m.display();
 }

 if(i==2)
 {
  merge m(A,B,1);
 }

 if(i==3)
 {
   int j;

   sort s;
   j=s.choose();

   if(j==1)
   merge m(A,B,2);

   if(j==2)
   merge m(A,B,3);

   if(j==3)
   {
     sort s;
     s.mergesort(A,B);
   }
 }
 
}


void main(){
int i;


cout<<"1.Default strings\n2.Enter the strings\n";
cin>>i;

if(i==1)
{
 takestring t;
 t.menu();
}

if(i==2)
{
 takestring t(i);
 t.menu();
}

getch();
}
